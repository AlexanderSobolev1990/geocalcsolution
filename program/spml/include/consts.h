//----------------------------------------------------------------------------------------------------------------------
///
/// \file       consts.h
/// \brief      Константы библиотеки СБПМ
/// \date       27.07.20 - создан
/// \author     Соболев А.А.
/// \addtogroup spml
/// \{
///

#ifndef SPML_CONSTS_H
#define SPML_CONSTS_H

// System includes:
#include <cmath>

namespace SPML /// Специальная библиотека программных модулей (СБ ПМ)
{
namespace Consts /// Константы
{
//----------------------------------------------------------------------------------------------------------------------
// Скорость света
const float C_F = 3.0e8f; ///< Скорость света, [м/с] в одинарной точности (float)
const double C_D = 3.0e8; ///< Скорость света, [м/с] в двойной точности (double)

//----------------------------------------------------------------------------------------------------------------------
// Число ПИ и его части
const double PI_D = std::acos( -1.0 );                                  ///< Число PI = 3.14... в радианах в двойной точности (double)
const float PI_F = static_cast<float>( std::acos( -1.0 ) );             ///< Число PI = 3.14... в радианах в одинарной точности (float)

const double PI_2_D = 2.0 * std::acos( -1.0 );                          ///< Число 2*PI = 6.28... в радианах в двойной точности (double)
const float PI_2_F = static_cast<float>( 2.0 * std::acos( -1.0 ) );     ///< Число 2*PI = 6.28... в радианах в одинарной точности (float)

const double PI_05_D = std::acos( 0.0 );                                ///< Число PI/2 = 1.57... в радианах в двойной точности (double)
const float PI_05_F = static_cast<float>( std::acos( 0.0 ) );           ///< Число PI/2 = 1.57... в радианах в одинарной точности (float)

const double PI_025_D = std::acos( -1.0 ) * 0.25;                       ///< Число PI/4 = 0.785... в радианах в двойной точности (double)
const float PI_025_F = static_cast<float>( std::acos( -1.0 ) * 0.25 );  ///< Число PI/4 = 0.785... в радианах в одинарной точности (float)

} // end namespace Consts
} // end namespace SPML
#endif // SPML_CONSTS_H
/// \}
